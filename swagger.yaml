---
swagger: '2.0'
info:
  version: "1.0.0"
  title: DataGraft 0.2.0
  description: |
host: 127.0.0.1:3003
schemes:
  - http
  - https
securityDefinitions:
  GitHub access code:
    type: oauth2
    scopes:
      user: 'Grants read/write access to profile info only. Note that this scope includes user:email and user:follow.'
      'user:email': Grants read access to a userâ€™s email addresses.
      'user:follow': Grants access to follow or unfollow other users.
    flow: accessCode
    authorizationUrl: 'https://github.com/login/oauth/authorize'
    tokenUrl: 'https://github.com/login/oauth/access_token'
  APIKey:
    type: apiKey
    in: header
    name: X-user-token
security:
  - GitHub access code:
      - user
      - 'user:email'
      - 'user:follow'
  - APIKey: []

paths:
  /api_keys:
    get:
      description: Get all of a user's API keys
      produces: 
        - application/json
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving API keys
          schema:
            $ref: '#/definitions/APIKeyIndexResponse'
        403:
          description: Forbidden  
    post:
      description: Create new API key
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: api_key
          schema: 
            $ref: '#/definitions/APIKeyPost'
          required: true
          
      security:
        - APIKey: []
      responses:
        201:
          description: Successfully created API key  
          schema:
            $ref: '#/definitions/APIKeyShowResponse'
        403:
          description: Forbidden  
  /api_keys/first:
    get:
      description: Get the first enabled API key
      produces: 
        - text/plain
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving API key
        403:
          description: Forbidden  
  /api_keys/{id}:
    get:
      description: Get the attributes of the API key
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the API key to be retrieved
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully obtained info about API key
          schema:
            $ref: '#/definitions/APIKeyShowResponse'
        403:
          description: Forbidden  
    patch:
      description: Update an API key
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the API key to be updated
          required: true
          type: string
          
        - in: body
          name: api_key
          schema: 
            $ref: '#/definitions/APIKeyPatch'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated API key
    put:
      description: Update an API key
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the API key to be updated
          required: true
          type: string
          
        - in: body
          name: api_key
          schema: 
            $ref: '#/definitions/APIKeyPatch'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated API key
    delete:
      description: Update an API key
      produces: 
        - application/json
      consumes:
        - application/json
      parameters:
        - in: path
          name: id
          description: ID of the API key to be deleted
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        204:
          description: Successfully deleted API key
  /quotas:
    get:
      description: Get information on the current quota of an authenticated user
      produces: 
        - application/json
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving quotainformation
          schema:
            $ref: '#/definitions/QuotasResponse'
        403:
          description: Forbidden  
    
  /{user}/filestores:
    get:
      description: Get list of all available attached files
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the list
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file list
          schema:
            $ref: '#/definitions/ThingIndexResponse'
        403:
          description: Forbidden  
    
  /{user}/filestores/{id}:
    get:
      description: Get information about a specific attached file
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user
          in: path
          type: string
        - name: id
          required: true
          description: ID of the file
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file information
          schema:
            $ref: '#/definitions/FilestoreShowResponse'
        403:
          description: Forbidden  
    
  /{user}/filestores/{id}/metadata:
    get:
      description: Get list of all metadata for a specific attached file
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user
          in: path
          type: string
        - name: id
          required: true
          description: ID of the file
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file information
        403:
          description: Forbidden  
    
  /{user}/filestores/{id}/metadata/{key}:
    get:
      description: Get metadata entry for a specific attached file
      produces: 
        - text/plain
      parameters:
        - name: user
          required: true
          description: ID of the user
          in: path
          type: string
        - name: id
          required: true
          description: ID of the file
          in: path
          type: string
        - name: key
          required: true
          description: ID of the metadata entry
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file information
        403:
          description: Forbidden  
    
  /{user}/filestores/{id}/configuration:
    get:
      description: Get list of all configuration for a specific attached file
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user
          in: path
          type: string
        - name: id
          required: true
          description: ID of the file
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file information
        403:
          description: Forbidden  
    
  /{user}/filestores/{id}/configuration/{key}:
    get:
      description: Get configuration entry for a specific attached file
      produces: 
        - text/plain
      parameters:
        - name: user
          required: true
          description: ID of the user
          in: path
          type: string
        - name: id
          required: true
          description: ID of the file
          in: path
          type: string
        - name: key
          required: true
          description: ID of the metadata entry
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file information
        403:
          description: Forbidden  
    
  /{user}/filestores/{id}/attachment:
    get:
      description: Download attached file
      produces: 
        - text/csv
        - application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
        - application/vnd.ms-excel
      parameters:
        - name: user
          required: true
          description: ID of the user
          in: path
          type: string
        - name: id
          required: true
          description: ID of the file
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Success in retrieving file
        403:
          description: Forbidden  
    
  /{user}/transformations:
    get:
      description: Obtain a list of all public transformations for a user. If provided with an enabled API key for that user, returns also the private transformations.
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the list
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved list of transformations
          schema:
            $ref: '#/definitions/ThingIndexResponse'
  /{user}/transformations/{id}:
    get:
      description: Obtain the attributes of a transformation
      produces: 
        - application/json
      parameters:
      - in: path
        name: user
        description: User that the transformation belongs to
        required: true
        type: string
      
      - in: path
        name: id
        description: ID (slug) of the transformation to retrieve
        required: true
        type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Successfully obtained transformation
          schema:
            $ref: '#/definitions/TransformationShowResponse'
  /{user}/transformations/{id}/metadata:
    get:
      description: Retrieve meta data for the chosen transformation
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the transformation
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the transformation for which to retrieve the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the transformation

  /{user}/transformations/{id}/metadata/{key}:
    get:
      description: Retrieve meta data according to the given key for the chosen transformation
      produces: 
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the transformation
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the transformation for which to retrieve the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the transformation

  /{user}/transformations/{id}/configuration:
    get:
      description: Retrieve configuration for the chosen transformation
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the transformation
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the transformation for which to retrieve the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the transformation
  
  /{user}/transformations/{id}/configuration/{key}:
    get:
      description: Retrieve configuration according to the given key for the chosen transformation
      produces: 
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the transformation
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the transformation for which to retrieve the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the transformation
          
  /{user}/queriable_data_stores:
    get:
      description: Obtain a list of all public queriable data for a user. If provided with an enabled API key for that user, returns also the private queriable data.
      produces:
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the queriable data
          in: path
          type: string
      security:
        - APIKey: []
      responses:
          200:
            description: Successfully retrieved the list of queriable data.
            
    post:
      description: Create a new queriable data to be stored
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the quireable data
          in: path
          type: string
        - name: queriable_data_store
          in: body
          schema:
            $ref: '#/definitions/QueriableData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the queriable data
          
  /{user}/queriable_data_stores/{id}:
    get:
      description: Obtain the attributes of the given queriable data
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to retrieve
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully obtained queriable data
    delete:
      description: Delete a queriable data
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user who wants to delete the queriable data
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data to delete
          type: string
      security: 
        - APIKey: []
      responses:
        204:
          description: Successfully deleted the queriable data
    put:
      description: Update a queriable data (replace the currently stored one with the one provided in the call)
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to retrieve
          type: string
        - name: queriable_data_store
          in: body
          schema:
            $ref: '#/definitions/QueriableData'
          required: true
      security:
        - APIKey: []
      responses:  
        200:
          description: Successfully updated the queriable data
    patch:
      description: Update a queriable data (only change the properties provided in the call)
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to retrieve
          type: string
        - name: queriable_data_store
          in: body
          schema:
            $ref: '#/definitions/QueriableData'
          required: true
      security:
        - APIKey: []
      responses:  
        200:
          description: Successfully updated the queriable data
  
  /{user}/queriable_data_stores/{id}/edit:
    get:
      description: NOT IMPLEMENTED?? Doesn't work... (Retrieve the code for the queriable data for edit)
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to edit the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to be edited
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the queriable data
  
  /{user}/queriable_data_stores/{id}/star:
    post:
      description: Star the selected queriable data
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to star the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to be stared
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully gave the queriable data a star
          
  /{user}/queriable_data_stores/{id}/unstar:
    post:
      description: Unstar the selected queriable data
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to unstar the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to be unstared
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully unstared the queriable data

  /{user}/queriable_data_stores/{id}/versions:
    get:
      description: INVALID! Is this implemented?? (Retrieve versions of the queriable data)
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the queriable data
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the queriable data to retrieve
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Information about the versions of the queried queriable data
          
  /{user}/queriable_data_stores/{id}/metadata:
    get:
      description: Retrieve meta data for the chosen queriable data store
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to retrieve the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the queriable data store
    post:
      description: Create meta data for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to create the meta data
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the meta data
    put:
      description: Update meta data for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to update the meta data
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the meta data   
    delete:
      description: Delete meta data for the chosen queriable data store
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to delete the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the meta datav for the queriable data store
  
  /{user}/queriable_data_stores/{id}/metadata/{key}:
    get:
      description: Retrieve meta data according to the given key for the chosen queriable data store
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to retrieve the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the queriable data store
    post:
      description: Create a meta data field for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to create the meta data
          type: string
        - name: key
          in: path
          required: true
          description: Key of the metadata to create
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the meta data
    put: 
      description: Update a meta data field for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to update the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to update
          required: true
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the meta data field
    delete:
      description: Delete a metadata field for the chosen queriable data store
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the meta data for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to delete the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to delete
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the meta data field
  
  /{user}/queriable_data_stores/{id}/configuration:
    get:
      description: Retrieve configuration for the chosen queriable data store
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to retrieve the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the queriable data store
    post:
      description: Create configuration for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to create the configuration
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the configuration
    put:
      description: Update configuration for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to update the configuration
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the configuration   
    delete:
      description: Delete configuration for the chosen queriable data store
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to delete the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the configuration for the queriable data store
  
  /{user}/queriable_data_stores/{id}/configuration/{key}:
    get:
      description: Retrieve configuration according to the given key for the chosen queriable data store
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to retrieve the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the queriable data store
    post:
      description: Create a configuration field for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to create the configuration
          type: string
        - name: key
          in: path
          required: true
          description: Key of the configuration to create
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the configuration
    put: 
      description: Update a configuration field for the chosen queriable data store
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to update the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to update
          required: true
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the configuration field
    delete:
      description: Delete a configuration field for the chosen queriable data store
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the configuration for the queriable data store
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the queriable data store for which to delete the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to delete
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the configuration field
     
    
  /{user}/utility_functions:
    get:
      description: Obtain a list of all public utility functions for a user. If provided with an enabled API key for that user, returns also the private utility functions.
      produces:
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the utility functions
          in: path
          type: string
      security:
        - APIKey: []
      responses: 
        200:
          description: Successfully retrieved the list of utility functions
    post:
      description: Create a new utility function
      produces:
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to create the utility function
          in: path
          type: string
        - name: utility_function
          in: body
          schema:
            $ref: '#/definitions/UtilityFunction'
          required: true
      security:
        - APIKey: []
      responses:
        201:
          description: Successfully created the utility function
          
  /{user}/utility_functions/{id}:
    get:
      description: Obtain the attributes of the given utility function.
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function to retrieve
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully obtained the utility function
    delete:
      description: Delete the given utility function
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function to delete
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the utility function
    put:
      description: Update a utility function by replacing the currently stored one with the one provided in this request
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function to be updated
          type: string
        - name: utility_function
          in: body
          schema:
            $ref: '#/definitions/UtilityFunction'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the utility function
    patch:
      description: Update a utility function by replacing only the parts provided in this request
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function to be updated
          type: string
        - name: utility_function
          in: body
          schema:
            $ref: '#/definitions/UtilityFunction'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the utility function
  
  /{user}/utility_functions/{id}/star:
    post:
      description: Star the selected utility function
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to star the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function to be stared
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully gave the utility function a star
  
  /{user}/utility_functions/{id}/unstar:
    post:
      description: Unstar the selected utility function
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to unstar the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slut) of the utility function to be unstared
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully unstared the utility function

  /{user}/utility_functions/{id}/metadata:
    get:
      description: Retrieve meta data for the chosen utility function
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to retrieve the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the utility function
    post:
      description: Create meta data for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to create the meta data
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the meta data
    put:
      description: Update meta data for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to update the meta data
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the meta data   
    delete:
      description: Delete meta data for the chosen utility function
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to delete the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the meta datav for the utility function
  
  /{user}/utility_functions/{id}/metadata/{key}:
    get:
      description: Retrieve meta data according to the given key for the chosen utility function
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to retrieve the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the utility function
    post:
      description: Create a meta data field for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to create the meta data
          type: string
        - name: key
          in: path
          required: true
          description: Key of the metadata to create
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the meta data
    put: 
      description: Update a meta data field for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to update the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to update
          required: true
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the meta data field
    delete:
      description: Delete a metadata field for the chosen utility function
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the meta data for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to delete the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to delete
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the meta data field

  /{user}/utility_functions/{id}/configuration:
    get:
      description: Retrieve configuration for the chosen utility function
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to retrieve the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the utility function
    post:
      description: Create configuration for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to create the configuration
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the configuration
    put:
      description: Update configuration for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to update the configuration
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the configuration   
    delete:
      description: Delete configuration for the chosen utility function
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to delete the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the configuration for the utility function
  
  /{user}/utility_functions/{id}/configuration/{key}:
    get:
      description: Retrieve configuration according to the given key for the chosen utility function
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to retrieve the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the utility function
    post:
      description: Create a configuration field for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to create the configuration
          type: string
        - name: key
          in: path
          required: true
          description: Key of the configuration to create
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the configuration
    put: 
      description: Update a configuration field for the chosen utility function
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to update the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to update
          required: true
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the configuration field
    delete:
      description: Delete a configuration field for the chosen utility function
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the configuration for the utility function
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the utility function for which to delete the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to delete
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the configuration field  
  
  /{user}/queries:
    get:
      description: Obtain a list of all public queries for a user. If provided with an enabled API key for that user, returns also the private queries.
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the list
          in: path
          type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved list of queries
    post:
      description: Creates a new query for the given user.
      produces: 
        - application/json
      parameters:
        - name: user
          required: true
          description: ID of the user for whom to obtain the list
          in: path
          type: string
          
        - name: query
          in: body
          schema: 
            $ref: '#/definitions/Query'
          required: true
      security: 
        - APIKey: []
      responses:
        201:
          description: Successfully created a query
          
  /{user}/queries/{id}:
    get:
      description: Obtain the attributes of a query
      produces: 
        - application/json
      parameters:
      - in: path
        name: user
        description: User that the query belongs to
        required: true
        type: string
      
      - in: path
        name: id
        description: ID (slug) of the query to retrieve
        required: true
        type: string
      security: 
        - APIKey: []
      responses:
        200:
          description: Successfully obtained query
    put:
      description: TO BE IMPLEMENTED - USE PATCH! Update a query (replace the currently stored one with the one provided in the call)
      produces: 
        - application/json
      parameters:
        - in: path
          name: user
          description: User that the query belongs to
          required: true
          type: string
      
        - in: path
          name: id
          description: ID (slug) of the query to change
          required: true
          type: string
      
        - name: query
          in: body
          schema: 
            $ref: '#/definitions/Query'
          required: true
      security: 
        - APIKey: []
      responses:
        200:
          description: OK
    patch:
      description: Update a query (only change the properties provided in the call)
      produces: 
        - application/json
      parameters:
        - in: path
          name: user
          description: User that the query belongs to
          required: true
          type: string
      
        - in: path
          name: id
          description: ID (slug) of the query to change
          required: true
          type: string
      
        - name: query
          in: body
          schema: 
            $ref: '#/definitions/Query'
          required: true
      security: 
        - APIKey: []
      responses:
        200:
          description: OK
    delete:
      description: Delete a query
      produces: 
        - application/json
      parameters:
      - in: path
        name: user
        description: User that the query belongs to
        required: true
        type: string
      
      - in: path
        name: id
        description: ID (slug) of the query to delete
        required: true
        type: string
      security: 
        - APIKey: []
      responses:
        204:
          description: Successfully deleted query
          
  /{user}/queries/{id}/star:
    post:
      description: Star the selected query
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to star the query
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the query to be stared
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully gave the query a star
  
  /{user}/queries/{id}/unstar:
    post:
      description: Unstar the selected query
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to unstar the query
          type: string
        - name: id
          in: path
          required: true 
          description: ID (slug) of the query to be unstared
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully unstared the query
          
  /{user}/queries/{id}/metadata:
    get:
      description: Retrieve meta data for the chosen query
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to retrieve the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the query
    post:
      description: Create meta data for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to create the meta data
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the meta data
    put:
      description: Update meta data for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to update the meta data
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the meta data   
    delete:
      description: Delete meta data for the chosen query
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to delete the meta data
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the meta datav for the query
  
  /{user}/queries/{id}/metadata/{key}:
    get:
      description: Retrieve meta data according to the given key for the chosen query
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to retrieve the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the meta data for the query
    post:
      description: Create a meta data field for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to create the meta data
          type: string
        - name: key
          in: path
          required: true
          description: Key of the metadata to create
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the meta data
    put: 
      description: Update a meta data field for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to update the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to update
          required: true
          type: string
        - name: metadata
          in: body
          schema:
            $ref: '#/definitions/MetaData'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the meta data field
    delete:
      description: Delete a metadata field for the chosen query
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the meta data for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to delete the meta data
          type: string
        - name: key
          in: path
          description: The key of the meta data field to delete
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the meta data field
  
  /{user}/queries/{id}/configuration:
    get:
      description: Retrieve configuration for the chosen query
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to retrieve the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the query
    post:
      description: Create configuration for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to create the configuration
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the configuration
    put:
      description: Update configuration for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to update the configuration
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the configuration   
    delete:
      description: Delete configuration for the chosen query
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to delete the configuration
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the configuration for the query
  
  /{user}/queries/{id}/configuration/{key}:
    get:
      description: Retrieve configuration according to the given key for the chosen query
      produces: 
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to obtain the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to retrieve the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to obtain
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully retrieved the configuration for the query
    post:
      description: Create a configuration field for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to create the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to create the configuration
          type: string
        - name: key
          in: path
          required: true
          description: Key of the configuration to create
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully created the configuration
    put: 
      description: Update a configuration field for the chosen query
      produces:
        - application/json
      consumes:
        - application/json
        - text/plain
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to update the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to update the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to update
          required: true
          type: string
        - name: configuration
          in: body
          schema:
            $ref: '#/definitions/Configuration'
          required: true
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully updated the configuration field
    delete:
      description: Delete a configuration field for the chosen query
      produces:
        - application/json
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user for who to delete the configuration for the query
          type: string
        - name: id
          in: path
          required: true
          description: ID (slug) of the query for which to delete the configuration
          type: string
        - name: key
          in: path
          description: The key of the configuration field to delete
          required: true
          type: string
      security:
        - APIKey: []
      responses:
        200:
          description: Successfully deleted the configuration field
  
  
  
  /explore:
    get:
      description: Get a list of all browsable public assets
      produces:
        - application/json
      security:
        - APIKey: []
      responses:
        200:
          description: Success in retrieving assets
          
      
definitions:
  User:
    required:
    - user
    properties:
      user: 
        type: object
        required:
        - email
        - password
        - remember_me
        properties:
          email:
            type: string
          password:
            type: string
          remember_me:
            type: string
            description: 1 or 0
  APIKeyIndexResponse:
    type: array
    items:
      properties:
        id: 
          type: integer
        user_id: 
          type: integer
        enabled: 
          type: boolean
        name: 
          type: string
        key: 
          type: string
        url: 
          type: string
  APIKeyShowResponse:
    type: object
    properties:
      enabled: 
        type: boolean
      name: 
        type: string
      key: 
        type: string
  APIKeyPost:
    required:
    - api_key
    properties:
      api_key: 
        type: object
        required:
        - enabled
        properties:
          name: 
            type: string
          enabled:
            type: boolean
  APIKeyPatch:
    required:
    - api_key
    properties:
      api_key: 
        type: object
        properties:
          name: 
            type: string
          enabled:
            type: boolean
  QuotasResponse:
    type: object
    properties:
      current_sparql_endpoints: 
        type: integer
      max_num_sparql_endpoints: 
        type: integer
      current_sparql_triples: 
        type: integer
      max_sparql_triples: 
        type: integer
      current_files: 
        type: integer
      max_num_files: 
        type: integer
      current_files_size: 
        type: integer
      max_files_size: 
        type: integer
      current_num_data_transformations: 
        type: integer
      max_num_data_transformations: 
        type: integer
  ThingIndexResponse:
    type: object
    properties:
      "@id": 
        type: string
        description: URL used to fetch this response
      "@type": 
        type: string
        description: RDF object type
      "@context": 
        type: object
        description: RDF prefix information and type definitions
      dcat:record:
        type: array
        items:
          properties:
            id:
              type: string
              description: Asset id
            type:
              type: string
              description: Asset type
            dct:title:
              type: string
              description: Asset title
            foaf:primaryTopic:
              type: string
              description: URL for this asset
            "@type": 
              type: string
              description: RDF object type
            dcat:public:
              type: boolean
              description: Public / private visibility
            foaf:publisher:
              type: string
              description: Asset username
            dct:modified:
              type: string
              description: Date last modified
            dct:issued:
              type: string
              description: Data issued
  FilestoreShowResponse:
    type: object
    properties:
      "@context": 
        type: object
        description: RDF prefix information and type definitions
      "@id":
        type: string
        description: URL used to fetch this response
      id:
        type: string
        description: Asset id
      dct:title:
        type: string
        description: Asset title
      dct:modified:
        type: string
        description: Date last modified
      dct:issued:
        type: string
        description: Data issued
      dcat:accessURL:
        type: string
        description: URL used to fetch this response
      dcat:mediaType: 
        type: string
      dcat:byteSize: 
        type: integer
      sin:extension:
        type: string
        
  TransformationShowResponse:
    type: object
    properties:
      "@context": 
        type: object
        description: RDF prefix information and type definitions
      "@id":
        type: string
        description: URL used to fetch this response
      id:
        type: string
        description: Asset id
      dct:title:
        type: string
        description: Asset title
      dct:modified:
        type: string
        description: Date last modified
      dct:issued:
        type: string
        description: Data issued
      dcat:public:
        type: boolean
        description: Public / private visibility
      foaf:publisher:
        type: string
        description: Asset username
      dct:description: 
        type: string
      dcat:keyword:
        type: array



  Transformation:
    properties:
      name: 
        type: string
      public:
        type: boolean
      code: 
        type: string
        description: JSON representation of a Grafterizer transformation
  Query:
    properties:
      public:
        type: boolean
      name:
        type: string
      metadata:
        type: string
      configuration:
        type: string
      query:
        type: string
      language:
        type: string
      description:
        type: string
  QueriableData:
    properties:
      public:
        type: boolean
      name: 
        type: string
      code:
        type: string
  Catalogue:
    properties:
      public:
        type: boolean
      name:
        type: string
  UtilityFunction:
    properties:
      public:
        type: boolean
      name:
        type: string
      metadata:
        type: string
      configuration:
        type: string
  MetaData:
    type: object
  Configuration:
    type: object